// –ü–†–û–°–¢–ê–Ø –ö–†–ê–® –ò–ì–†–ê –ë–ï–ó –ò–ì–†–û–ö–û–í
class CrashGame {
    constructor() {
        console.log('üöÄ –ö—Ä–∞—à –∏–≥—Ä–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è...');
        
        // –û—Å–Ω–æ–≤–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
        this.gameState = 'waiting'; // waiting, countdown, flying, crashed
        this.multiplier = 1.00;
        this.crashPoint = 0;
        this.countdownTimer = 10;
        this.playerBet = null;
        this.autoWithdraw = false;
        this.autoWithdrawAt = 2.0;
        this.isAutoWithdrawing = false;
        this.isWithdrawing = false;
        
        // –ò—Å—Ç–æ—Ä–∏—è –∫—Ä–∞—à–µ–π (–º–∞–∫—Å–∏–º—É–º 4 —ç–ª–µ–º–µ–Ω—Ç–∞)
        this.crashHistory = [];
        
        // –ò–Ω—Ç–µ—Ä–≤–∞–ª—ã –¥–ª—è –æ—á–∏—Å—Ç–∫–∏
        this.countdownInterval = null;
        this.flyingInterval = null;
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º –∏–≥—Ä—É
        this.init();
    }
    
    init() {
        console.log('üìã –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞...');
        this.setupEventListeners();
        this.startGameLoop();
    }

    setupEventListeners() {
        // –ö–Ω–æ–ø–∫–∞ —Å—Ç–∞–≤–∫–∏
        const betBtn = document.getElementById('crashBetBtn');
        if (betBtn) {
            betBtn.onclick = (e) => {
                e.preventDefault();
                e.stopPropagation();
                console.log('üéØ –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ —Å—Ç–∞–≤–∫–∏');
                this.placeBet();
            };
        }
        
        // –ö–Ω–æ–ø–∫–∞ –∑–∞–±—Ä–∞—Ç—å - –Ω–µ—Å–∫–æ–ª—å–∫–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
        const withdrawBtn = document.getElementById('crashWithdrawBtn');
        if (withdrawBtn) {
            // –û—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞
            withdrawBtn.onclick = (e) => {
                e.preventDefault();
                e.stopPropagation();
                console.log('üéØ –ö–õ–ò–ö –ø–æ –∫–Ω–æ–ø–∫–µ –∑–∞–±—Ä–∞—Ç—å');
                this.withdrawBet();
            };
            
            // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ mousedown –¥–ª—è –±—ã—Å—Ç—Ä–æ–π —Ä–µ–∞–∫—Ü–∏–∏
            withdrawBtn.onmousedown = (e) => {
                if (!withdrawBtn.disabled) {
                    e.preventDefault();
                    e.stopPropagation();
                    console.log('üñ±Ô∏è MOUSEDOWN –ø–æ –∫–Ω–æ–ø–∫–µ –∑–∞–±—Ä–∞—Ç—å');
                    this.withdrawBet();
                }
            };
            
            // –¢–∞—á –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö
            withdrawBtn.addEventListener('touchstart', (e) => {
                if (!withdrawBtn.disabled) {
                    e.preventDefault();
                    e.stopPropagation();
                    console.log('üì± –¢–ê–ß –ø–æ –∫–Ω–æ–ø–∫–µ –∑–∞–±—Ä–∞—Ç—å');
                    this.withdrawBet();
                }
            }, { passive: false });
        }
    }

    startGameLoop() {
        console.log('üéÆ –ù–∞—á–∏–Ω–∞–µ–º –∏–≥—Ä–æ–≤–æ–π —Ü–∏–∫–ª...');
        this.waitingPhase();
    }
    
    // –§–∞–∑–∞ –æ–∂–∏–¥–∞–Ω–∏—è
    waitingPhase() {
        console.log('‚è≥ –§–∞–∑–∞ –æ–∂–∏–¥–∞–Ω–∏—è...');
        this.gameState = 'waiting';
        this.multiplier = 1.00;
        this.updateDisplay();
        
        // –ñ–¥–µ–º 2 —Å–µ–∫—É–Ω–¥—ã, –ø–æ—Ç–æ–º –Ω–∞—á–∏–Ω–∞–µ–º –æ–±—Ä–∞—Ç–Ω—ã–π –æ—Ç—Å—á–µ—Ç
        setTimeout(() => {
            this.countdownPhase();
        }, 2000);
    }
    
    // –§–∞–∑–∞ –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –æ—Ç—Å—á–µ—Ç–∞
    countdownPhase() {
        console.log('‚è∞ –û–±—Ä–∞—Ç–Ω—ã–π –æ—Ç—Å—á–µ—Ç –Ω–∞—á–∞–ª—Å—è!');
        this.gameState = 'countdown';
        this.countdownTimer = 10;
        
        // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π –∏–Ω—Ç–µ—Ä–≤–∞–ª –µ—Å–ª–∏ –µ—Å—Ç—å
        if (this.countdownInterval) {
            clearInterval(this.countdownInterval);
        }
        
        this.countdownInterval = setInterval(() => {
            this.countdownTimer--;
            console.log(`‚è∞ –û—Å—Ç–∞–ª–æ—Å—å: ${this.countdownTimer} —Å–µ–∫`);
            this.updateDisplay();
            
            if (this.countdownTimer < 0) {
                clearInterval(this.countdownInterval);
                this.countdownInterval = null;
                this.flyingPhase();
            }
        }, 1000);
    }
    
    // –§–∞–∑–∞ –ø–æ–ª–µ—Ç–∞
    flyingPhase() {
        console.log('üöÄ –ó–≤–µ–∑–¥–∞ –≤–∑–ª–µ—Ç–∞–µ—Ç!');
        this.gameState = 'flying';
        this.crashPoint = this.generateCrashPoint();
        console.log(`üéØ –ö—Ä–∞—à —Ç–æ—á–∫–∞: ${this.crashPoint.toFixed(2)}x`);
        
        // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π –∏–Ω—Ç–µ—Ä–≤–∞–ª –µ—Å–ª–∏ –µ—Å—Ç—å
        if (this.flyingInterval) {
            clearInterval(this.flyingInterval);
        }
        
        this.flyingInterval = setInterval(() => {
            this.multiplier += 0.01;
            this.updateDisplay();
            
            // –î–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –∞–≤—Ç–æ–≤—ã–≤–æ–¥–∞
            if (this.playerBet && this.autoWithdraw) {
                console.log(`ü§ñ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ–≤—ã–≤–æ–¥–∞: ${this.multiplier.toFixed(2)}x >= ${this.autoWithdrawAt}x`);
            }
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ–≤—ã–≤–æ–¥
            if (this.playerBet && this.autoWithdraw && this.multiplier >= this.autoWithdrawAt) {
                console.log(`ü§ñ –ê–í–¢–û–í–´–í–û–î –°–†–ê–ë–û–¢–ê–õ –Ω–∞ ${this.multiplier.toFixed(2)}x!`);
                this.isAutoWithdrawing = true;
                this.withdrawBet();
                // –ò–≥—Ä–∞ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è! –ù–ï –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª
                return;
            }
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ä–∞—à
            if (this.multiplier >= this.crashPoint) {
                clearInterval(this.flyingInterval);
                this.flyingInterval = null;
                this.crashedPhase();
            }
        }, 100);
    }
    
    // –§–∞–∑–∞ –∫—Ä–∞—à–∞
    crashedPhase() {
        console.log('üí• –ö–†–ê–®! –ó–≤–µ–∑–¥–∞ —É–ø–∞–ª–∞!');
        this.gameState = 'crashed';
        this.multiplier = this.crashPoint;
        this.updateDisplay();
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∫—Ä–∞—à –≤ –∏—Å—Ç–æ—Ä–∏—é
        this.addToHistory(this.crashPoint);
        
        // –ï—Å–ª–∏ –∏–≥—Ä–æ–∫ –Ω–µ –∑–∞–±—Ä–∞–ª —Å—Ç–∞–≤–∫—É - –æ–Ω –ø—Ä–æ–∏–≥—Ä–∞–ª
        if (this.playerBet) {
            console.log('üò¢ –ò–≥—Ä–æ–∫ –Ω–µ —É—Å–ø–µ–ª –∑–∞–±—Ä–∞—Ç—å —Å—Ç–∞–≤–∫—É');
            this.playerBet = null;
        }
        
        // –ß–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã –Ω–æ–≤—ã–π —Ä–∞—É–Ω–¥
        setTimeout(() => {
            this.waitingPhase();
        }, 3000);
    }
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–æ—á–∫—É –∫—Ä–∞—à–∞
    generateCrashPoint() {
        const rand = Math.random();
        if (rand < 0.5) return 1.00 + Math.random() * 0.50; // 1.00-1.50
        if (rand < 0.8) return 1.50 + Math.random() * 1.00; // 1.50-2.50  
        if (rand < 0.95) return 2.50 + Math.random() * 2.50; // 2.50-5.00
        return 5.00 + Math.random() * 10.00; // 5.00-15.00
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∏—Å–ø–ª–µ–π
    updateDisplay() {
        // –ú–Ω–æ–∂–∏—Ç–µ–ª—å
        const multiplierEl = document.getElementById('crashMultiplier');
        if (multiplierEl) {
            multiplierEl.textContent = this.multiplier.toFixed(2) + 'x';
        }
        
        // –°—Ç–∞—Ç—É—Å
        const statusEl = document.getElementById('crashStatus');
        if (statusEl) {
            if (this.gameState === 'waiting') {
                statusEl.textContent = '–û–∂–∏–¥–∞–Ω–∏–µ —Ä–∞—É–Ω–¥–∞...';
            } else if (this.gameState === 'countdown') {
                statusEl.textContent = `–í–∑–ª–µ—Ç —á–µ—Ä–µ–∑ ${this.countdownTimer} —Å–µ–∫`;
            } else if (this.gameState === 'flying') {
                statusEl.textContent = 'üöÄ –ü–æ–ª–µ—Ç –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ!';
            } else if (this.gameState === 'crashed') {
                statusEl.textContent = `üí• –ö—Ä–∞—à –Ω–∞ ${this.crashPoint.toFixed(2)}x`;
            }
        }
        
        // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–≤–µ–∑–¥–æ–π
        const crashStar = document.getElementById('crashStar');
        
        if (crashStar) {
            // –£–±–∏—Ä–∞–µ–º –≤—Å–µ –∫–ª–∞—Å—Å—ã
            crashStar.className = 'crash-star';
            
            // –î–æ–±–∞–≤–ª—è–µ–º –Ω—É–∂–Ω—ã–π –∫–ª–∞—Å—Å –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è
            if (this.gameState === 'waiting') {
                crashStar.classList.add('waiting');
            } else if (this.gameState === 'countdown') {
                crashStar.classList.add('waiting');
            } else if (this.gameState === 'flying') {
                crashStar.classList.add('flying');
            } else if (this.gameState === 'crashed') {
                crashStar.classList.add('crashed');
                // –°–æ–∑–¥–∞–µ–º —ç—Ñ—Ñ–µ–∫—Ç –≤–∑—Ä—ã–≤–∞
                this.createExplosion();
            }
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏
        this.updateButtons();
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∞–≤—Ç–æ–≤—ã–≤–æ–¥–∞
        this.updateAutoWithdrawControl();
    }
    
    updateButtons() {
        const betBtn = document.getElementById('crashBetBtn');
        const withdrawBtn = document.getElementById('crashWithdrawBtn');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∫–Ω–æ–ø–∫–∏ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
        if (!betBtn || !withdrawBtn) {
            console.log('‚ö†Ô∏è –ö–Ω–æ–ø–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ DOM');
            return;
        }
        
        console.log(`üîÑ –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏, —Å–æ—Å—Ç–æ—è–Ω–∏–µ: ${this.gameState}, —Å—Ç–∞–≤–∫–∞: ${this.playerBet}`);
        
        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å–µ inline —Å—Ç–∏–ª–∏
        betBtn.style.cssText = '';
        withdrawBtn.style.cssText = '';
        
        if (this.gameState === 'waiting') {
            // –í –æ–∂–∏–¥–∞–Ω–∏–∏ - –Ω–µ–ª—å–∑—è —Å—Ç–∞–≤–∏—Ç—å, –∂–¥–µ–º –æ—Ç—Å—á–µ—Ç–∞
            betBtn.disabled = true;
            betBtn.textContent = '–û–∂–∏–¥–∞–Ω–∏–µ...';
            withdrawBtn.disabled = true;
            withdrawBtn.textContent = '–ó–∞–±—Ä–∞—Ç—å';
        } else if (this.gameState === 'countdown') {
            // –í–æ –≤—Ä–µ–º—è –æ—Ç—Å—á–µ—Ç–∞ - –ú–û–ñ–ù–û —Å—Ç–∞–≤–∏—Ç—å
            if (!this.playerBet) {
                betBtn.disabled = false;
                betBtn.textContent = '–ü–æ—Å—Ç–∞–≤–∏—Ç—å';
            } else {
                betBtn.disabled = true;
                betBtn.textContent = '–°—Ç–∞–≤–∫–∞ —Å–¥–µ–ª–∞–Ω–∞';
            }
            withdrawBtn.disabled = true;
            withdrawBtn.textContent = '–ó–∞–±—Ä–∞—Ç—å';
        } else if (this.gameState === 'flying') {
            // –í–æ –≤—Ä–µ–º—è –ø–æ–ª–µ—Ç–∞ - –Ω–µ–ª—å–∑—è —Å—Ç–∞–≤–∏—Ç—å, –º–æ–∂–Ω–æ –∑–∞–±–∏—Ä–∞—Ç—å
            betBtn.disabled = true;
            betBtn.textContent = '–ü–æ–ª–µ—Ç!';
            
            if (this.playerBet) {
                withdrawBtn.disabled = false;
                withdrawBtn.textContent = `–ó–∞–±—Ä–∞—Ç—å ${(this.playerBet * this.multiplier).toFixed(0)}‚≠ê`;
            } else {
                withdrawBtn.disabled = true;
                withdrawBtn.textContent = '–ó–∞–±—Ä–∞—Ç—å';
            }
        } else if (this.gameState === 'crashed') {
            // –ü–æ—Å–ª–µ –∫—Ä–∞—à–∞ - –Ω–µ–ª—å–∑—è –Ω–∏—á–µ–≥–æ –¥–µ–ª–∞—Ç—å
            betBtn.disabled = true;
            betBtn.textContent = '–ö—Ä–∞—à!';
            withdrawBtn.disabled = true;
            withdrawBtn.textContent = '–ü–æ–∑–¥–Ω–æ!';
        }
    }
    
    updateAutoWithdrawControl() {
        const autoWithdrawEl = document.getElementById('autoWithdrawEnabled');
        const autoWithdrawAtEl = document.getElementById('autoWithdraw');
        
        if (!autoWithdrawEl || !autoWithdrawAtEl) return;
        
        // –ï—Å–ª–∏ –µ—Å—Ç—å —Å—Ç–∞–≤–∫–∞ –∏ –∏–≥—Ä–∞ –ª–µ—Ç–∏—Ç - –±–ª–æ–∫–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∞–≤—Ç–æ–≤—ã–≤–æ–¥–∞
        if (this.playerBet && this.gameState === 'flying') {
            autoWithdrawEl.disabled = true;
            autoWithdrawAtEl.disabled = true;
            autoWithdrawEl.style.opacity = '0.5';
            autoWithdrawAtEl.style.opacity = '0.5';
            autoWithdrawEl.style.cursor = 'not-allowed';
            autoWithdrawAtEl.style.cursor = 'not-allowed';
            console.log('üîí –ê–≤—Ç–æ–≤—ã–≤–æ–¥ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –≤–æ –≤—Ä–µ–º—è –ø–æ–ª–µ—Ç–∞');
        } else {
            // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –≤ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–ª—É—á–∞—è—Ö
            autoWithdrawEl.disabled = false;
            autoWithdrawAtEl.disabled = false;
            autoWithdrawEl.style.opacity = '1';
            autoWithdrawAtEl.style.opacity = '1';
            autoWithdrawEl.style.cursor = 'pointer';
            autoWithdrawAtEl.style.cursor = 'text';
        }
    }
    
    placeBet() {
        // –°—Ç–∞–≤–∫–∏ –º–æ–∂–Ω–æ –¥–µ–ª–∞—Ç—å –¢–û–õ–¨–ö–û –≤–æ –≤—Ä–µ–º—è –æ—Ç—Å—á–µ—Ç–∞
        if (this.gameState !== 'countdown') {
            console.log(`‚ùå –ù–µ–ª—å–∑—è —Å—Ç–∞–≤–∏—Ç—å –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏: ${this.gameState}`);
            return;
        }
        
        if (this.playerBet) {
            console.log('‚ùå –°—Ç–∞–≤–∫–∞ —É–∂–µ —Å–¥–µ–ª–∞–Ω–∞');
            return; // –£–∂–µ –µ—Å—Ç—å —Å—Ç–∞–≤–∫–∞
        }
        
        const betAmountEl = document.getElementById('crashBetAmount');
        const autoWithdrawEl = document.getElementById('autoWithdrawEnabled');
        const autoWithdrawAtEl = document.getElementById('autoWithdraw');
        
        if (!betAmountEl) return;
        
        const betAmount = parseInt(betAmountEl.value);
        if (isNaN(betAmount) || betAmount < 50) {
            alert('–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–∞–≤–∫–∞ 50 –∑–≤–µ–∑–¥');
            return;
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å
        const currentBalance = parseInt(localStorage.getItem('stars') || '0');
        if (currentBalance < betAmount) {
            alert(`–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∑–≤–µ–∑–¥! –£ –≤–∞—Å: ${currentBalance}, –Ω—É–∂–Ω–æ: ${betAmount}`);
            return;
        }
        
        this.playerBet = betAmount;
        
        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å—Ç–∞–≤–∫—É —Å –±–∞–ª–∞–Ω—Å–∞
        const newBalance = currentBalance - betAmount;
        localStorage.setItem('stars', newBalance.toString());
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞
        const balanceEl = document.querySelector('.balance-amount');
        if (balanceEl) {
            balanceEl.textContent = newBalance;
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ–≤—ã–≤–æ–¥
        if (autoWithdrawEl && autoWithdrawEl.checked) {
            this.autoWithdraw = true;
            this.autoWithdrawAt = parseFloat(autoWithdrawAtEl.value);
            console.log(`ü§ñ –ê–≤—Ç–æ–≤—ã–≤–æ–¥ –í–ö–õ–Æ–ß–ï–ù –Ω–∞ ${this.autoWithdrawAt}x`);
        } else {
            this.autoWithdraw = false;
            console.log(`‚ùå –ê–≤—Ç–æ–≤—ã–≤–æ–¥ –í–´–ö–õ–Æ–ß–ï–ù`);
        }
        
        console.log(`üí∞ –°—Ç–∞–≤–∫–∞ ${betAmount} –∑–≤–µ–∑–¥ —Ä–∞–∑–º–µ—â–µ–Ω–∞! –ë–∞–ª–∞–Ω—Å: ${newBalance}`);
        console.log(`üéØ –°–æ—Å—Ç–æ—è–Ω–∏–µ –∞–≤—Ç–æ–≤—ã–≤–æ–¥–∞: ${this.autoWithdraw}, –∑–Ω–∞—á–µ–Ω–∏–µ: ${this.autoWithdrawAt}`);
        
        this.updateButtons();
    }
    
    withdrawBet() {
        console.log(`üéØ –ü–æ–ø—ã—Ç–∫–∞ –≤—ã–≤–æ–¥–∞, —Å–æ—Å—Ç–æ—è–Ω–∏–µ: ${this.gameState}, —Å—Ç–∞–≤–∫–∞: ${this.playerBet}`);
        
        // –ó–∞—â–∏—Ç–∞ –æ—Ç –¥–≤–æ–π–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞
        if (this.isWithdrawing) {
            console.log('‚ö†Ô∏è –í—ã–≤–æ–¥ —É–∂–µ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º');
            return;
        }
        
        if (this.gameState !== 'flying' || !this.playerBet) {
            console.log('‚ùå –ù–µ–ª—å–∑—è –∑–∞–±—Ä–∞—Ç—å —Å—Ç–∞–≤–∫—É —Å–µ–π—á–∞—Å');
            return;
        }
        
        this.isWithdrawing = true;
        
        // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –ø–æ–ª–Ω—ã–π –≤—ã–∏–≥—Ä—ã—à (—Å—Ç–∞–≤–∫–∞ √ó –º–Ω–æ–∂–∏—Ç–µ–ª—å)
        const totalWinAmount = Math.floor(this.playerBet * this.multiplier);
        console.log(`üí∞ –ü–æ–ª–Ω—ã–π –≤—ã–∏–≥—Ä—ã—à: ${totalWinAmount} –∑–≤–µ–∑–¥ (${this.playerBet} √ó ${this.multiplier.toFixed(2)})`);
        
        // –í–ê–ñ–ù–û: –ü—Ä–∏ —Å—Ç–∞–≤–∫–µ –º—ã —É–∂–µ —Å–ø–∏—Å–∞–ª–∏ –¥–µ–Ω—å–≥–∏, –ø–æ—ç—Ç–æ–º—É –¥–æ–±–∞–≤–ª—è–µ–º –ü–û–õ–ù–´–ô –≤—ã–∏–≥—Ä—ã—à
        const currentBalance = parseInt(localStorage.getItem('stars') || '1000');
        const newBalance = currentBalance + totalWinAmount;
        localStorage.setItem('stars', newBalance.toString());
        
        console.log(`üí≥ –ë–∞–ª–∞–Ω—Å: ${currentBalance} + ${totalWinAmount} = ${newBalance}`);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞
        const balanceEl = document.querySelector('.balance-amount');
        if (balanceEl) {
            balanceEl.textContent = newBalance;
        }
        
        // –ù–ï –û–°–¢–ê–ù–ê–í–õ–ò–í–ê–ï–ú –∏–≥—Ä—É! –ò–≥—Ä–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç 24/7
        // –¢–æ–ª—å–∫–æ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—Ç–∞–≤–∫—É –∏–≥—Ä–æ–∫–∞
        this.playerBet = null;
        this.autoWithdraw = false;
        this.isAutoWithdrawing = false;
        this.isWithdrawing = false;
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏
        this.updateButtons();
        
        // –£–≤–µ–¥–æ–º–ª—è–µ–º –±–æ—Ç–∞ –æ –≤—ã–∏–≥—Ä—ã—à–µ
        this.notifyBotAboutWin(this.playerBet, this.multiplier, totalWinAmount);
        
        console.log(`‚úÖ –°—Ç–∞–≤–∫–∞ –∑–∞–±—Ä–∞–Ω–∞! –ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: ${newBalance}. –ò–≥—Ä–∞ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è!`);
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∫—Ä–∞—à –≤ –∏—Å—Ç–æ—Ä–∏—é
    addToHistory(crashMultiplier) {
        console.log(`üìä –î–æ–±–∞–≤–ª—è–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é: ${crashMultiplier.toFixed(2)}x`);
        
        // –î–æ–±–∞–≤–ª—è–µ–º –≤ –Ω–∞—á–∞–ª–æ –º–∞—Å—Å–∏–≤–∞
        this.crashHistory.unshift(crashMultiplier);
        
        // –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 4 —ç–ª–µ–º–µ–Ω—Ç–∞
        if (this.crashHistory.length > 4) {
            this.crashHistory = this.crashHistory.slice(0, 4);
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏
        this.updateHistoryDisplay();
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏
    updateHistoryDisplay() {
        const historyContainer = document.getElementById('crashHistoryList');
        if (!historyContainer) return;
        
        // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        historyContainer.innerHTML = '';
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∫–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç –∏—Å—Ç–æ—Ä–∏–∏
        this.crashHistory.forEach(multiplier => {
            const historyItem = document.createElement('div');
            historyItem.className = 'crash-history-item';
            historyItem.textContent = multiplier.toFixed(2) + 'x';
            
            // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–≤–µ—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –º–Ω–æ–∂–∏—Ç–µ–ª—è
            if (multiplier < 1.5) {
                historyItem.classList.add('low');
            } else if (multiplier < 3.0) {
                historyItem.classList.add('medium');
            } else if (multiplier < 10.0) {
                historyItem.classList.add('high');
            } else {
                historyItem.classList.add('ultra');
            }
            
            historyContainer.appendChild(historyItem);
        });
        
        console.log(`üìä –ò—Å—Ç–æ—Ä–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞: [${this.crashHistory.map(x => x.toFixed(2)).join(', ')}]`);
    }
    
    // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –±–æ—Ç–∞ –æ –≤—ã–∏–≥—Ä—ã—à–µ
    async notifyBotAboutWin(betAmount, multiplier, winAmount) {
        try {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –¥–æ—Å—Ç—É–ø –∫ Telegram WebApp
            if (window.Telegram && window.Telegram.WebApp && window.Telegram.WebApp.initDataUnsafe?.user) {
                const user = window.Telegram.WebApp.initDataUnsafe.user;
                const profit = winAmount - betAmount;
                
                const message = `üéâ <b>–í–´–ò–ì–†–´–® –í CRASH!</b>\n\n` +
                               `üë§ –ò–≥—Ä–æ–∫: ${user.first_name}\n` +
                               `üí∞ –°—Ç–∞–≤–∫–∞: ${betAmount} ‚≠ê\n` +
                               `üöÄ –ú–Ω–æ–∂–∏—Ç–µ–ª—å: ${multiplier.toFixed(2)}x\n` +
                               `üíé –í—ã–∏–≥—Ä—ã—à: ${winAmount} ‚≠ê\n` +
                               `üìà –ü—Ä–∏–±—ã–ª—å: +${profit} ‚≠ê`;
                
                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —á–µ—Ä–µ–∑ –æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
                if (window.pixelstarsCasino && window.pixelstarsCasino.sendBotMessage) {
                    await window.pixelstarsCasino.sendBotMessage(user.id, message);
                    console.log('ü§ñ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –≤—ã–∏–≥—Ä—ã—à–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –±–æ—Ç');
                }
            }
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –±–æ—Ç:', error);
        }
    }
    
    createExplosion() {
        const starContainer = document.getElementById('crashStarContainer');
        if (!starContainer) return;
        
        // –°–æ–∑–¥–∞–µ–º 12 —á–∞—Å—Ç–∏—Ü –≤–∑—Ä—ã–≤–∞
        for (let i = 0; i < 12; i++) {
            const particle = document.createElement('div');
            particle.className = 'explosion-particle';
            
            // –°–ª—É—á–∞–π–Ω—ã–µ —Ü–≤–µ—Ç–∞
            const colors = ['#fbbf24', '#f59e0b', '#d97706', '#ef4444', '#dc2626'];
            particle.style.backgroundColor = colors[Math.floor(Math.random() * colors.length)];
            
            // –ü–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä—É–µ–º –≤ —Ü–µ–Ω—Ç—Ä–µ –∑–≤–µ–∑–¥—ã
            particle.style.left = '50%';
            particle.style.top = '50%';
            
            starContainer.appendChild(particle);
            
            // –°–ª—É—á–∞–π–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
            const angle = (360 / 12) * i + (Math.random() * 30 - 15);
            const distance = 50 + Math.random() * 50;
            
            // –ê–Ω–∏–º–∏—Ä—É–µ–º —á–∞—Å—Ç–∏—Ü—É
            setTimeout(() => {
                particle.style.transform = `translate(${Math.cos(angle * Math.PI / 180) * distance}px, ${Math.sin(angle * Math.PI / 180) * distance}px)`;
                particle.style.opacity = '0';
                particle.style.transition = 'all 0.8s ease-out';
            }, 10);
            
            // –£–¥–∞–ª—è–µ–º —á–∞—Å—Ç–∏—Ü—É
            setTimeout(() => {
                if (particle.parentNode) {
                    particle.parentNode.removeChild(particle);
                }
            }, 1000);
        }
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –∏–≥—Ä—É –∫–æ–≥–¥–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∑–∏—Ç—Å—è
document.addEventListener('DOMContentLoaded', () => {
    window.crashGame = new CrashGame();
});